version: '3.8'

# PUABO / Nexus COS - Pre-Flight Deployment Configuration
# Date: 2025-09-30 20:00 PST
# This configuration matches the Pre-Flight deployment status requirements

services:
  # PostgreSQL Database - nexus_db
  nexus-cos-postgres:
    image: postgres:15-alpine
    container_name: nexus-cos-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-nexus_db}
      POSTGRES_USER: ${DB_USER:-nexus_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Database password must be set in .env.pf}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus_user -d nexus_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

  # Redis Cache
  nexus-cos-redis:
    image: redis:7-alpine
    container_name: nexus-cos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

  # PUABO API Service - Main API endpoint
  puabo-api:
    build:
      context: .
      dockerfile: dockerfile
    container_name: puabo-api
    env_file:
      - .env.pf
    environment:
      NODE_ENV: production
      PORT: 4000
      DB_HOST: ${DB_HOST:-nexus-cos-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-nexus_db}
      DB_USER: ${DB_USER:-nexus_user}
      DB_PASSWORD: ${DB_PASSWORD:?Database password must be set in .env.pf}
      REDIS_HOST: ${REDIS_HOST:-nexus-cos-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID:?OAuth client ID must be set in .env.pf}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET:?OAuth client secret must be set in .env.pf}
    ports:
      - "4000:4000"
    depends_on:
      nexus-cos-postgres:
        condition: service_healthy
      nexus-cos-redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

  # Nginx Gateway (Optional - for Docker mode deployment)
  nginx:
    image: nginx:alpine
    container_name: nexus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf.docker:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl/ionos:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      puabo-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - docker-nginx

  # PUABO AI SDK Service
  nexus-cos-puaboai-sdk:
    build:
      context: ./services/puaboai-sdk
      dockerfile: Dockerfile
    container_name: nexus-cos-puaboai-sdk
    env_file:
      - .env.pf
    environment:
      NODE_ENV: production
      PORT: 3002
      DB_HOST: ${DB_HOST:-nexus-cos-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-nexus_db}
      DB_USER: ${DB_USER:-nexus_user}
      DB_PASSWORD: ${DB_PASSWORD:?Database password must be set in .env.pf}
    ports:
      - "3002:3002"
    depends_on:
      nexus-cos-postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

  # PV Keys Service
  nexus-cos-pv-keys:
    build:
      context: ./services/pv-keys
      dockerfile: Dockerfile
    container_name: nexus-cos-pv-keys
    env_file:
      - .env.pf
    environment:
      NODE_ENV: production
      PORT: 3041
      DB_HOST: ${DB_HOST:-nexus-cos-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-nexus_db}
      DB_USER: ${DB_USER:-nexus_user}
      DB_PASSWORD: ${DB_PASSWORD:?Database password must be set in .env.pf}
    ports:
      - "3041:3041"
    depends_on:
      nexus-cos-postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

  # StreamCore Service (dependency for vscreen-hollywood)
  nexus-cos-streamcore:
    build:
      context: ./services/streamcore
      dockerfile: Dockerfile
    container_name: nexus-cos-streamcore
    env_file:
      - .env.pf
    environment:
      NODE_ENV: production
      PORT: 3016
    ports:
      - "3016:3016"
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3016/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # V-Screen Hollywood Edition - Virtual LED Volume/Virtual Production Suite
  vscreen-hollywood:
    build:
      context: ./services/vscreen-hollywood
      dockerfile: Dockerfile
    container_name: vscreen-hollywood
    env_file:
      - .env.pf
    environment:
      NODE_ENV: production
      PORT: 8088
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID:?OAuth client ID must be set in .env.pf}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET:?OAuth client secret must be set in .env.pf}
      STREAMCORE_URL: http://nexus-cos-streamcore:3016
      PUABOAI_SDK_URL: http://nexus-cos-puaboai-sdk:3002
      NEXUS_AUTH_URL: http://puabo-api:4000
    ports:
      - "8088:8088"
    depends_on:
      nexus-cos-streamcore:
        condition: service_healthy
      nexus-cos-puaboai-sdk:
        condition: service_started
      puabo-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - cos-net
      - nexus-network

volumes:
  postgres_data:
  redis_data:
  nginx_logs:

networks:
  cos-net:
    driver: bridge
  nexus-network:
    driver: bridge
