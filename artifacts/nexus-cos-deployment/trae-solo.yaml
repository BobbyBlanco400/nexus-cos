# TRAE SOLO Configuration for Nexus COS
# Complete Operating System Deployment Orchestration

apiVersion: trae.solo/v1
kind: Deployment
metadata:
  name: nexus-cos
  version: "2.0.0"
  description: "Nexus COS - Complete Operating System with TRAE SOLO orchestration"

spec:
  # Environment Configuration
  environment:
    name: production
    domain: ${DOMAIN}
    ssl_email: ${EMAIL}
    
  # Secret Store Integration
  secrets:
    vps_host: ${VPS_HOST}
    vps_user: ${VPS_USER}
    vps_ssh_key: ${VPS_SSH_KEY}
    
  # Service Definitions
  services:
    # PostgreSQL Database
    database:
      image: postgres:15-alpine
      container_name: nexus-postgres
      ports:
        - "5432:5432"
      environment:
        POSTGRES_DB: nexus_cos
        POSTGRES_USER: nexus_user
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./backend/migrations:/docker-entrypoint-initdb.d
      health_check:
        test: ["CMD-SHELL", "pg_isready -U nexus_user -d nexus_cos"]
        interval: 30s
        timeout: 10s
        retries: 3
        
    # Node.js Backend
    backend-node:
      build:
        context: ./backend
        dockerfile: Dockerfile.node
      container_name: nexus-backend-node
      ports:
        - "3000:3000"
      environment:
        NODE_ENV: production
        DATABASE_URL: postgresql://nexus_user:${DB_PASSWORD}@database:5432/nexus_cos
        JWT_SECRET: ${JWT_SECRET}
        PORT: 3000
      depends_on:
        - database
      health_check:
        test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        
    # Python FastAPI Backend
    backend-python:
      build:
        context: ./backend
        dockerfile: Dockerfile.python
      container_name: nexus-backend-python
      ports:
        - "3001:3001"
      environment:
        PYTHONPATH: /app
        DATABASE_URL: postgresql://nexus_user:${DB_PASSWORD}@database:5432/nexus_cos
        JWT_SECRET: ${JWT_SECRET}
        PORT: 3001
      depends_on:
        - database
      health_check:
        test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        
    # React Frontend with Nginx
    frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      container_name: nexus-frontend
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./deployment/nginx/nexuscos.online.conf:/etc/nginx/conf.d/default.conf
        - ./ssl:/etc/nginx/ssl
      depends_on:
        - backend-node
        - backend-python
      health_check:
        test: ["CMD", "curl", "-f", "http://localhost/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        
  # Build Pipeline
  build:
    stages:
      - name: install-dependencies
        commands:
          - npm install
          - cd backend && npm install && pip install -r requirements.txt
          - cd frontend && npm install
          - cd mobile && npm install
          
      - name: run-tests
        commands:
          - npm test
          - cd backend && npm test
          - cd frontend && npm test
          
      - name: build-frontend
        commands:
          - cd frontend && npm run build
          
      - name: build-mobile
        commands:
          - cd mobile && ./build-mobile.sh
          - mkdir -p artifacts
          - cp mobile/builds/android/app.apk artifacts/nexus-cos.apk
          - cp mobile/builds/ios/app.ipa artifacts/nexus-cos.ipa
          
  # Deployment Pipeline
  deployment:
    target: vps
    strategy: rolling
    
    pre_deploy:
      - name: provision-vps
        script: ./scripts/provision-vps.sh
        
      - name: setup-ssl
        script: ./scripts/setup-ssl.sh
        
    deploy:
      - name: deploy-containers
        script: docker-compose up -d
        
      - name: configure-nginx
        script: ./scripts/configure-nginx.sh
        
    post_deploy:
      - name: health-checks
        script: ./scripts/health-checks.sh
        
      - name: setup-monitoring
        script: ./scripts/setup-monitoring.sh
        
  # Monitoring Configuration
  monitoring:
    prometheus:
      enabled: true
      port: 9090
      scrape_interval: 15s
      
    grafana:
      enabled: true
      port: 3003
      
    health_endpoints:
      - name: frontend
        url: http://localhost/health
        interval: 30s
        
      - name: backend-node
        url: http://localhost:3000/health
        interval: 30s
        
      - name: backend-python
        url: http://localhost:3001/health
        interval: 30s
        
      - name: database
        url: postgresql://nexus_user:${DB_PASSWORD}@localhost:5432/nexus_cos
        interval: 60s
        
  # Volumes
  volumes:
    postgres_data:
      driver: local
      
  # Networks
  networks:
    nexus-network:
      driver: bridge
      
# Automation Scripts
automation:
  scripts:
    - name: full-deployment
      description: "Complete build, test, deploy, and monitor workflow"
      steps:
        - build
        - test
        - deploy
        - monitor
        - report
        
    - name: rollback
      description: "Rollback to previous version"
      steps:
        - stop-services
        - restore-backup
        - start-services
        - verify-health