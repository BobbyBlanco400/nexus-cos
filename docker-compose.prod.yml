version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: nexus-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nexus_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nexus_secure_pass}
      POSTGRES_DB: ${POSTGRES_DB:-nexus_cos}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - nexus-network

  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nexus-network

  # Core Backend Services
  backend-node:
    build: ./backend
    container_name: nexus-backend-node
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://nexus_admin:nexus_secure_pass@postgres:5432/nexus_cos}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET:-nexus_jwt_secret_key}
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend-python:
    build: 
      context: ./backend
      dockerfile: Dockerfile.python
    container_name: nexus-backend-python
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://nexus_admin:nexus_secure_pass@postgres:5432/nexus_cos}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexus-frontend
    environment:
      - VITE_API_URL=https://nexuscos.online/api
      - VITE_PYTHON_API_URL=https://nexuscos.online/py
      - VITE_V_SUITE_URL=https://nexuscos.online/v-suite
      - VITE_CREATOR_HUB_URL=https://nexuscos.online/creator-hub
      - VITE_PUABOVERSE_URL=https://nexuscos.online/puaboverse
      - VITE_BOOM_BOOM_ROOM_URL=https://nexuscos.online/boom-boom-room
      - VITE_STUDIO_AI_URL=https://nexuscos.online/studio-ai
      - VITE_OTT_URL=https://nexuscos.online/ott
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - nexus-network

  # Extended Modules
  v-suite:
    build: ./modules/v-suite
    container_name: nexus-v-suite
    environment:
      - API_URL=https://nexuscos.online/api
      - PORT=3101
    ports:
      - "3101:3101"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3101/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  creator-hub:
    build: ./services/creator-hub
    container_name: nexus-creator-hub
    environment:
      - API_URL=https://nexuscos.online/api
      - PORT=3102
    ports:
      - "3102:3102"
    volumes:
      - creator_uploads:/app/uploads
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3102/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  puaboverse:
    build: ./services/puaboverse
    container_name: nexus-puaboverse
    environment:
      - API_URL=https://nexuscos.online/api
      - PORT=3103
    ports:
      - "3103:3103"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3103/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  boom-boom-room:
    build: ./services/boom-boom-room-live
    container_name: nexus-boom-boom-room
    environment:
      - RTMP_SERVER=rtmp://live.nexuscos.online/live
      - PORT=3104
    ports:
      - "3104:3104"
      - "1935:1935"  # RTMP port
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3104/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  studio-ai:
    build: ./services/nexus-cos-studio-ai
    container_name: nexus-studio-ai
    environment:
      - KEI_AI_KEY=${KEI_AI_KEY:-demo_ai_key}
      - KEI_AI_ENDPOINT=${KEI_AI_ENDPOINT:-https://api.openai.com/v1}
      - PORT=3105
    ports:
      - "3105:3105"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3105/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ott-frontend:
    build: ./services/ott-frontend
    container_name: nexus-ott-frontend
    environment:
      - API_URL=https://nexuscos.online/api
      - PORT=3106
    ports:
      - "3106:3106"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3106/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring Services
  grafana:
    image: grafana/grafana:latest
    container_name: nexus-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_SERVER_ROOT_URL=https://nexuscos.online/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - "3107:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - nexus-network

  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - nexus-network

  # PUABO Integrations
  puabo-cos:
    build: ./puabo-integrations/puabo-cos
    container_name: nexus-puabo-cos
    environment:
      - PORT=3201
    ports:
      - "3201:3201"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3201/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-auth-api:
    build: ./puabo-integrations/node-auth-api  
    container_name: nexus-node-auth-api
    environment:
      - PORT=3204
      - JWT_SECRET=${JWT_SECRET:-nexus_jwt_secret_key}
    ports:
      - "3204:3204"
    restart: unless-stopped
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3204/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nexus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nexuscos.online.conf:/etc/nginx/conf.d/default.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend-node
      - backend-python
      - v-suite
      - creator-hub
      - puaboverse
      - boom-boom-room
      - studio-ai
      - ott-frontend
      - grafana
    restart: unless-stopped
    networks:
      - nexus-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:
  creator_uploads:

networks:
  nexus-network:
    driver: bridge